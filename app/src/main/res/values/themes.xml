<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.ShaalWallpaper" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/lightBlack</item>
        <item name="colorPrimaryVariant">@color/UBlack</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor" >?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
        <item name="floatingActionButtonStyle">@style/Widget.App.FloatingActionButton</item>


        <!--        <item name="android:windowTranslucentStatus">true</item>-->
        <!--        <item name="android:windowTranslucentNavigation">true</item>-->

        <!--        <item name="android:navigationBarColor">-->
        <!--            @android:color/transparent-->
        <!--        </item>-->

        <!--        &lt;!&ndash; Optional: set to transparent if your app is drawing behind the status bar. &ndash;&gt;-->
        <!--        <item name="android:statusBarColor">-->
        <!--            @android:color/transparent-->
        <!--        </item>-->

    </style>

    <style name="AppTheme" parent="Theme.AppCompat">
        <item name="android:windowTranslucentNavigation">true</item>
    </style>

    <!--    <style name="Theme.ShaalWallpaper" parent="android:Theme.Material.Wallpaper.NoTitleBar"-->
    <!--&gt;-->
    <!--        <item name="android:statusBarColor">@android:color/transparent</item>-->
    <!--        <item name="android:navigationBarColor">@android:color/transparent</item>-->
    <!--        <item name="android:windowTranslucentStatus">true</item>-->
    <!--        <item name="android:windowTranslucentNavigation">true</item>-->
    <!--    </style>-->

    <style name="Widget.App.FloatingActionButton" parent="Widget.MaterialComponents.FloatingActionButton">
        <!--the following attribute will change in the shape appearance of the normal FAB-->
        <item name="materialThemeOverlay">@style/myCustomThemeForNormalFab</item>
        <!--to make the code look cleaner and readable, the above
            two children are implemented separately-->
    </style>

    <style name="myCustomThemeForNormalFab" parent="">

        <!--for the extended FAB the cornerFamily is given the value as the cut-->
        <item name="colorSecondary">@color/lightBlack</item>

        <!--this attribute gives makes the change in the text and icon color of the FAB-->
        <item name="colorOnSecondary">@color/white</item>

    </style>

    <style name="Theme.ShaalWallpaper.Fullscreen" parent="Theme.ShaalWallpaper">
        <item name="android:actionBarStyle">
            @style/Widget.Theme.ShaalWallpaper.ActionBar.Fullscreen
        </item>
        <item name="android:windowActionBarOverlay">true</item>
        <item name="android:windowBackground">@null</item>
    </style>

    <style name="ThemeOverlay.ShaalWallpaper.FullscreenContainer" parent="">
        <item name="fullscreenBackgroundColor">@color/light_blue_600</item>
        <item name="fullscreenTextColor">@color/light_blue_A200</item>
    </style>

    <style name="SplashTheme" parent="Theme.MaterialComponents.Light.NoActionBar">
        <item name="android:windowBackground">@drawable/splash_background</item>
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/UBlack</item>
        <item name="colorAccent">@color/teal_200</item>
        <item name="android:statusBarColor">@color/UBlack</item>
    </style>

</resources>